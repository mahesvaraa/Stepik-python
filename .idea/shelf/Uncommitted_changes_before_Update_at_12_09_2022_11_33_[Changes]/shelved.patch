Index: Всякое/Тестовый файл.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>s = input()\r\ns = s.replace(' ', '').replace('+', ' ').replace('-',' -')\r\nprint(sum(map(int, s.split())))\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Всякое/Тестовый файл.py b/Всякое/Тестовый файл.py
--- a/Всякое/Тестовый файл.py	(revision 6913b45a6b43027ec4fbaca619eca5584eed2959)
+++ b/Всякое/Тестовый файл.py	(date 1660408694159)
@@ -1,4 +1,36 @@
-s = input()
-s = s.replace(' ', '').replace('+', ' ').replace('-',' -')
-print(sum(map(int, s.split())))
+
+# class FileAcceptor:
+#
+#     def __init__(self, *args):
+#         self.ext = list(args)
+#
+#     def __call__(self, filename):
+#         for ext in self.ext:
+#             if filename.endswith('.' + ext):
+#                 return True
+#         else:
+#             return False
+#
+#     def __add__(self, other):
+#         self.ext.extend(filter(lambda x: x not in self.ext, other.ext))
+#         return self
+class FileAcceptor:
+    def __init__(self, *extensions):
+        self.extensions = extensions
+
+    def __call__(self, filename):
+        return filename.endswith(self.extensions)
+
+    def __add__(self, other):
+        return FileAcceptor(*self.extensions + other.extensions)
+acceptor1 = FileAcceptor("jpg", "jpeg", "png")
+acceptor2 = FileAcceptor("html", "bmp")
+acceptor12 = acceptor1 + acceptor2    # ("jpg", "jpeg", "png", "bmp")
+
+
+filenames = ["boat.shtml", "ans.web.png", "text.txt", "www.python.doc", "my.ava.jpg", "forest.jpeg", "eq_1.png", "eq_2.xls"]
+
+filenames = list(filter(acceptor2, filenames))
+print(filenames)
 
+filenames = ['boat.shtml']
\ No newline at end of file
